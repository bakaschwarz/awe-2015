#maindiagram-reload
  = render partial: 'main_diagram', locals: {filter_from: filter_from, filter_to: filter_to}
%hr
.panel-group#station-panels
  -station_hash = ordered_timestamps_for_stations({from: filter_from.to_i, to: filter_to.to_i})
  -station_hash_sorted = Hash[station_hash.sort_by {|station, time_stamp_hash| station[:dashboard_position]}]
  -station_hash_sorted.each_pair do |station, time_stamp_hash|
    -@station = station
    -@time_stamp_hash = time_stamp_hash
    -# Make the stations collapsible
    %div.panel.panel-default.station{ station_id: station.id, dashboard_position: station.dashboard_position}
      %div.panel-heading.panel-header
        %div{id: "station_#{station.id}", style: "cursor: pointer;"}
          %h2= station.label
        %div{id: "station_content_#{station.id}"}
          =render 'sensor_charts'
          %div.panel.panel-default
            %div.panel-heading.panel-header
              %div{id: "station_table_toggle_#{station.id}", style: "cursor: pointer;"}
                %h3{id: "station_table_label_#{station.id}"} Show table
            %table.table.table-striped.table-bordered.station-table{id: "station_table_#{station.id}"}
              %tr
                %th= "Time Stamp"
                -station.sensors.each do |sensor|
                  %th
                    = sensor.label
                    = "["
                    = sensor.unit
                    = "]"
              -time_stamp_hash.each_pair do |time_stamp, value_hash|
                %tr
                  %td= Time.at(time_stamp).to_formatted_s(:db)
                  -station.sensors.each do |sensor|
                    %td
                      -if value_hash[sensor.id] == nil
                        = "N/A"
                      -else
                        = value_hash[sensor.id]
:javascript
  
  var nr_stations = $('.station').length;
  var station_ids = new Array(nr_stations);
  var station_table_bools = new Array(nr_stations).map(function() {return false});

  $('.station').each(function(i) {
    station_ids[i] = $(this).attr("station_id");
    $('#station_' + station_ids[i]).click(function(){
      $('#station_content_' + station_ids[i]).toggle(600);
    });
    $('#station_content_' + station_ids[i]).click(function(){
      $('#station_table_'  + station_ids[i]).toggle(600, function() {
        $('#station_table_label_' + station_ids[i]).text(function () {
          station_table_bools[i] = !station_table_bools[i]
          return station_table_bools[i] == true ? 'Show table' : 'Hide table'
        })
      });
    });
  });

  updateStationOrder = function(x) {

    var item, stations;

    stations = (function() {
      var i, len, ref, result, results;
      ref = $('#station-panels .station');
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        result = {station_id: item.attributes['station_id'].value, dashboard_position: item.attributes['dashboard_position'].value};
        results.push(result);
      }
      return results;
    })();


    console.log(JSON.stringify(stations))
    return $.ajax({
      url: "dashboard_positions.json",
      data: JSON.stringify({
        "stations_reduced": stations
      }),
      dataType: 'json',
      type: 'PUT',
      contentType: 'application/json'
    });
  };

  ready = function() {
    $('#station-panels').sortable({
      onSort: console.log('onSort event')
    });
    $('#save-station-order-btn').click(function() {
      updateStationOrder();
    });
  }

  $(document).ready(ready)
  $(document).on('page:load', ready)